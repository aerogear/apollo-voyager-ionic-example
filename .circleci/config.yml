version: 2
jobs:
  build:
    working_directory: ~/aerogear
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: run lint
          command: npm run lint
      - run:
          name: run ionic install
          command: npm install ionic
      - run:
          name: run build
          command: npm run build
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: test-results.xml
  build-android:
    docker:
      - image: circleci/android:api-28-node
    steps:
      - run:
          name: Install gradle
          command: sudo apt install gradle
      - run:
          name: Install ionic
          command: sudo npm --global install ionic
      - run:
          name: Install cordova
          command: sudo npm --global install cordova
      - checkout
      - restore_cache:
          name: Restore node modules cache
          keys: 
            - node-modules-{{ .Branch }}-{{ checksum "package.json" }}
            - node-modules-{{ .Branch }}-
            - node-modules-
      - run:
          name: Install node modules
          command: npm install
      - save_cache:
          name: Save node modules cache
          key: node-modules-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - restore_cache:
          name: Restoring cordova plugins cache
          keys: 
            - cordova-plugins-{{ checksum "config.xml" }}
      - run:
          name: Build android app
          command: npx ionic cordova build android
      - save_cache:
          name: Save cordova plugins cache
          key: cordova-plugins-{{ checksum "config.xml" }}
          paths:
            - plugins
      - persist_to_workspace:
          root: platforms/android/app/build/outputs/apk/debug/
          paths:
            - app-debug.apk
  e2e-android:
    docker:
      - image: circleci/node:carbon
    steps:
      - checkout
      - restore_cache:
          name: Restore node modules cache
          keys: 
            - node-modules-{{ .Branch }}-{{ checksum "package.json" }}
            - node-modules-{{ .Branch }}-
            - node-modules-
      - run:
          name: Install node modules
          command: npm install
      - save_cache:
          name: Save node modules cache
          key: node-modules-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Run E2E tests
          command: |
            export BROWSERSTACK_APP="$(curl -u "$BROWSERSTACK_USER:$BROWSERSTACK_KEY" \
              -X POST https://api-cloud.browserstack.com/app-automate/upload \
              -F "file=@/tmp/workspace/app-debug.apk" | cut -d '"' -f 4)"
            npm run e2e
  publish_example_server_container:
    docker:
      # image for building docker containers
      - image: docker:17.12.1-ce-git
    steps:
      - checkout
      # special workaround to allow running docker in docker https://circleci.com/docs/2.0/building-docker-images/
      - setup_remote_docker:
          version: 17.05.0-ce
          docker_layer_caching: true
      - run: |
          cd server          
          TAG=$CIRCLE_TAG ../scripts/publish_example_server_container.sh
workflows:
  version: 2
  build_and_release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - build-android:
          filters:
            tags:
              only: /.*/
            branches:
              only: master
      - e2e-android:
          requires:
            - build-android
      - publish_example_server_container:
          filters:
            tags:
              only: /.*/
            branches:
              only: master
