version: 2
jobs:
  build:
    working_directory: ~/aerogear
    docker:
      # Node 8 LTS
      - image: circleci/node:carbon
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: run lint
          command: npm run lint
      - run:
          name: run ionic install
          command: npm install ionic
      - run:
          name: run build
          command: npm run build
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: test-results.xml
  publish_example_server_container:
    docker:
      # image for building docker containers
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      # special workaround to allow running docker in docker https://circleci.com/docs/2.0/building-docker-images/
      - setup_remote_docker:
          version: 17.05.0-ce
          docker_layer_caching: true
      - run: |
          cd server          
          TAG=$CIRCLE_TAG ../scripts/publish_example_server_container.sh
workflows:
  version: 2
  build_and_release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - publish_example_server_container:
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - master